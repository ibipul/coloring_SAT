{"name":"K Coloring SAT problem","tagline":"Solving a K-coloring problem with SAT","body":"Author:\r\n\r\n - Bipul Islam\r\n \r\n---\r\n##K-Coloring with SAT \r\n\r\nGiven a Graph( **G** ) and a number of colours ( **K** ), the program says whether the Graph is K colourable. A python script is used to convert the graph to it's SAT in **CNF** form, which is then fed to a SAT solver [**zchaff**](https://www.princeton.edu/~chaff/zchaff.html) which states whether the it's colorable or not or simply undecidable.\r\n\r\n####Graph to CNF Mapping\r\n - For each vertex i in  vertex set V & color c in {1,2... k} use U Xic {c= 1,2...k}.\r\n - For each i in V, ∩ ∩ (Xic Implies not Xid) where c={1...k-1} & d={c+1...k}.\r\n - For each edge e(i,j) in G, ∩ (Xic Implies not Xjc) c={1,2...k}.\r\n\r\n####Usage:\r\n```\r\n./graph2cnf.py graph_i.txt > graph_i.cnf\r\n./zchaff graph_i.cnf\r\n```\r\n##### Zchaff \r\n*source (ver--2008.10.12) is included in the project rep as a* **.zip**, *extract and then use* **make** *(Makefile is included in the source) to create the executable it then copy the executable to any location and run as mentioned before*\r\n\r\n   \r\n","google":"UA-47995334-1","note":"Don't delete this file! It's used internally to help with page regeneration."}